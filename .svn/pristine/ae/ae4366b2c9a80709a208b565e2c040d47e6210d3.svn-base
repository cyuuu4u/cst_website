CREATE DATABASE IF NOT EXISTS hqucst CHARACTER SET utf8 COLLATE utf8_general_ci;
USE hqucst;

CREATE TABLE IF NOT EXISTS t_user (
    f_id                int not null AUTO_INCREMENT PRIMARY KEY,
    f_username          varchar(30) not null UNIQUE,    
    f_password          varchar(50) not null,
    f_status            enum('Y', 'N') not null DEFAULT 'Y', -- 'Y'正常，'N'禁用
    f_name              varchar(10) not null,    
    f_phone             varchar(50) not null,    
    f_email             varchar(50) null,    
    f_lasttime          datetime null,				-- 上一次登陆时间
    f_loginip           varchar(39) null,			--	上一次登陆ip
    f_creatorId         int not null,				  -- 操作员
    f_creationTime      datetime not null
);

-- 操作记录表
CREATE TABLE IF NOT EXISTS t_log (
    f_id				int not null AUTO_INCREMENT PRIMARY KEY,
	  f_userId			int not null,           -- 操作员
	  f_op				char(4) not null,       -- 操作, 'ADD'=增, 'DEL'=删, 'MOD'=改, 'VIEW'=查
	  f_creationTime		datetime not null,      -- 操作时间
	  f_desc				varchar(90),            -- 操作描述
	  FOREIGN KEY (f_userId) REFERENCES t_user(f_id)
);

-- 角色表
CREATE TABLE IF NOT EXISTS t_role (
    f_id                int not null AUTO_INCREMENT PRIMARY KEY,
    f_name              varchar(30) not null,    					-- 角色名称
    f_creationTime      datetime not null,
    f_desc              varchar(300) null
);

-- 权限表
CREATE TABLE IF NOT EXISTS t_privilege (
    f_code              int not null PRIMARY KEY,
    f_parentCode        int not null DEFAULT 0,
    f_name              varchar(30) not null,
    f_url               varchar(100) not null,  -- 对应的可操作的url
    f_desc              varchar(300) null
);

-- 用户角色
CREATE TABLE IF NOT EXISTS t_user_role (
    f_userId            int not null,    
    f_roleId            int not null, 
    CONSTRAINT PK_USER_ROLE PRIMARY KEY (f_userId, f_roleId),
    CONSTRAINT FR_USER_ROLE_USER_ID FOREIGN KEY (f_userId) REFERENCES t_user(f_id),
    CONSTRAINT FR_USER_ROLE_ROLE_ID FOREIGN KEY (f_roleId) REFERENCES t_role(f_id)
);

-- 角色权限
CREATE TABLE IF NOT EXISTS t_role_privilege (
    f_roleId            int not null, 
    f_privilegeCode     int not null,
    CONSTRAINT PK_GROUP_ROLE PRIMARY KEY (f_roleId, f_privilegeCode),
    CONSTRAINT FR_ROLE_PRIVILEGE_ROLE_ID FOREIGN KEY (f_roleId) REFERENCES t_role(f_id),
    CONSTRAINT FR_ROLE_PRIVILEGE_PRIVILEGE_CODE FOREIGN KEY (f_privilegeCode) REFERENCES t_privilege(f_code)    
);

-- 用户权限
CREATE TABLE IF NOT EXISTS t_user_privilege (
    f_userId            int not null, 
    f_privilegeCode     int not null,
    CONSTRAINT PK_USER_PRIVILEGE PRIMARY KEY (f_userId, f_privilegeCode),
    CONSTRAINT FR_USER_PRIVILEGE_USER_ID FOREIGN KEY (f_userId) REFERENCES t_user(f_id),
    CONSTRAINT FR_USER_PRIVILEGE_PRIVILEGE_CODE FOREIGN KEY (f_privilegeCode) REFERENCES t_privilege(f_code)    
);
CREATE TABLE IF NOT EXISTS t_parent_kind (
    f_code              int not null AUTO_INCREMENT PRIMARY KEY,
    f_name              varchar(30) not null
);
CREATE TABLE IF NOT EXISTS t_image (
    f_id                 int not null AUTO_INCREMENT PRIMARY KEY,
    f_url                varchar(90),
    f_documentId         int not null,
    FOREIGN KEY (f_documentId) REFERENCES t_document(f_id)
);
CREATE TABLE IF NOT EXISTS t_document_kind (
    f_code              int not null AUTO_INCREMENT PRIMARY KEY,
    f_parentCode        int not null DEFAULT 0,
    f_name              varchar(30) not null,
    FOREIGN KEY (f_parentCode) REFERENCES t_parent_kind(f_code)
);

CREATE TABLE IF NOT EXISTS t_user_teacher (
    f_userId              int not null PRIMARY KEY,
    f_teacherId           int not null,
    FOREIGN KEY (f_userId) REFERENCES t_user(f_id),
    FOREIGN KEY (f_teacherId) REFERENCES t_teacher(f_id)
);
CREATE TABLE IF NOT EXISTS t_teacher (
    f_id                int not null AUTO_INCREMENT PRIMARY KEY,   
    f_name              varchar(60) not null,                     
    f_sex               varchar(4)  not null,                                                    
    f_education         varchar(20) not null,
    f_job               varchar(20) not null,                      
    f_photoUrl          varchar(90),                               
    f_individualResume  varchar(300),                             
    f_researchProject   varchar(300), 
    f_papers            varchar(300)                                   
);
CREATE TABLE IF NOT EXISTS t_document (
    f_id                int not null AUTO_INCREMENT PRIMARY KEY,   -- 文章id
    f_name              varchar(60) not null,                      -- 文章标题
    f_documentType      tinyint not null DEFAULT 0,                -- 文件or直接编写                              
    f_documentKindId    int not null,            
    f_uploadTime        date not null,
    f_lastEditTime      date null,
    f_creatorId         int not null,
    f_url               varchar(90),                               --  文章URL
    f_pictureUrl        varchar(90),                               --  文章附图URL
    f_contont           varchar(1000),                             --  直接编写 正文
    f_top               tinyint not null DEFAULT 0, 
    f_desc              varchar(300),                                     
    FOREIGN KEY (f_documentKindId) REFERENCES t_document_kind(f_code),
    FOREIGN KEY (f_creatorId) REFERENCES t_user(f_id)
);
INSERT INTO t_parent_kind (f_code, f_name) VALUES 
    (1, '学院概况'),
    (2, '教学工作'),
    (3, '师资队伍'),
    (5, '学术科研'),
    (6, '研究生教学'),
    (4, '院务工作');
INSERT INTO t_document_kind (f_parentCode, f_name) VALUES 
    (1, '学院简介'),
    (1, '现任领导'),
    (1, '组织机构'),
    (1, '学院改革'),
    (2, '教学动态'),
    (2, '专业设置'),
    (2, '教学计划'),
    (2, '教学研究'),
    (3, '师资队伍'),
    (3, '科研团队'),
    (4, '学院动态'),
    (4, '学院发文'),
    (4, '学子风采'),
    (4, '就业信息'),
    (4, '资料下载'),
    (4, '学生工作'),
    (4, '党建工作'),
    (5, '科研动态'),
    (5, '科研项目'),
    (5, '学术论文'),
    (5, '项目推广'),
    (5, '院企合作'),
    (6, '研究生动态'),
    (6, '专业介绍'),
    (6, '招生信息'),
    (6, '导师简介');